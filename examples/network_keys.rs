use ssb_crypto::NetworkKey;

fn main() {
    // https://docs.rs/ssb-crypto/0.2.2/ssb_crypto/struct.NetworkKey.html

    // create an instance of the ssb main network key
    let netkey = NetworkKey::SSB_MAIN_NET;

    println!("{:?}", netkey);
    // NetworkKey([212, 161, 203, 136, 166, 111, 2, 248, 219, 99, 92, 226, 100, 65, 204, 93, 172, 27, 8, 66, 12, 234, 172, 35, 8, 57, 183, 85, 132, 90, 159, 251])

    // create a random network key
    let alt_netkey = NetworkKey::generate();

    println!("{:?}", alt_netkey);
    // NetworkKey([178, 160, 0, 57, 146, 54, 24, 200, 239, 109, 51, 72, 47, 224, 126, 47, 23, 205, 68, 183, 21, 60, 176, 60, 80, 199, 231, 216, 147, 31, 151, 60])

    // ensure the generated key is distinct from the main network key
    assert_ne!(alt_netkey, NetworkKey::SSB_MAIN_NET);

    // create a random number generator
    let mut rng = rand::thread_rng();

    // create a random network key using the given random number generator
    let rng_alt_netkey = NetworkKey::generate_with_rng(&mut rng);

    println!("{:?}", rng_alt_netkey);
    // NetworkKey([8, 152, 243, 23, 84, 179, 145, 175, 208, 52, 203, 55, 203, 202, 25, 93, 150, 251, 81, 237, 109, 208, 137, 138, 114, 98, 42, 171, 183, 78, 145, 76])

    // ensure the generated key is distinct from the main network key
    assert_ne!(rng_alt_netkey, NetworkKey::SSB_MAIN_NET);

    let bytes = [1, 2, 3, 4];

    // generate an authentication code for the given byte slice
    let auth = netkey.authenticate(&bytes);

    // verify that an authentication code was generated by this key, given the same byte slice
    match netkey.verify(&auth, &bytes) {
        true => println!("authentication code verified"),
        false => eprintln!("verification failed"),
    };
    // authentication code verified

    // verify that an authentication code was generated by this key, given the same byte slice
    match alt_netkey.verify(&auth, &bytes) {
        true => println!("authentication code verified"),
        false => eprintln!("verification failed"),
    };
    // verification failed
}
